{"version":3,"sources":["components/PostList/PostCard.js","hooks/usePosts.js","components/PostList/index.js","components/Post/index.js","hooks/useMarkdownPost.js","pages/Projects/Project.js","hooks/usePost.js","pages/Projects/index.js","pages/Home/index.js","App.js","serviceWorker.js","i18n.js","index.js"],"names":["PostCard","usePosts","type","useState","posts","setPosts","loading","setLoading","useEffect","a","async","fetch","res","console","error","ok","json","fetchPosts","PostList","props","t","useTranslation","className","Object","keys","map","post","title","img","description","github","tech","href","target","rel","entry","color","src","alt","defaultProps","Post","indev","link","markdown","setMarkdown","text","md","rendered","unified","use","parse","remark2react","sanitize","toHast","handlers","html","h","node","rehype","fragment","value","children","remarkReactComponents","processSync","contents","useMarkdownPost","Container","Badge","Project","slug","usePost","useParams","project","Projects","match","useRouteMatch","fluid","path","Home","i18n","class","to","spy","smooth","duration","icon","faComments","language","onClick","changeLanguage","faArrowAltCircleDown","id","faEnvelope","faTwitter","faGithub","faLinkedin","App","Boolean","window","location","hostname","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","ReactDOM","render","fallback","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uTAkEeA,I,yBChEA,SAASC,IAA6B,IAApBC,EAAmB,uDAAZ,WAAY,EACxBC,mBAAS,IADe,mBAC3CC,EAD2C,KACpCC,EADoC,OAEpBF,oBAAS,GAFW,mBAE3CG,EAF2C,KAElCC,EAFkC,KAuBlD,OAnBAC,qBAAU,YACW,mBAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAIHE,MAAM,UAAD,OAAWT,EAAX,WAJF,OAIfU,EAJe,8DAMfL,GAAW,GACXM,QAAQC,MAAR,uCAA8CZ,IAP/B,kBAQR,CAAEI,YARM,YAUbM,EAAIG,GAVS,6BAWfV,EAXe,YAAAI,EAAA,MAWAG,EAAII,QAXJ,2CAajBT,GAAW,GAbM,wDAenBU,KACC,CAACf,EAAMI,IAEH,CAAEA,UAASF,S,YClBpB,SAASc,EAASC,GAAQ,IAAD,EAEIlB,EADVkB,EAATjB,MACAI,EAFe,EAEfA,QAASF,EAFM,EAENA,MACTgB,EAAMC,cAAND,EAER,OAAId,EAAgB,2CAGlB,yBAAKgB,UAAU,iCACZC,OAAOC,KAAKpB,GAAOqB,KAAI,SAAAC,GAAS,IAAD,EACoBtB,EAAMsB,GAAhDC,EADsB,EACtBA,MAAoBC,GADE,EACfC,YADe,EACFD,KAAKE,EADH,EACGA,OAAQC,EADX,EACWA,KACzC,OACE,yBAAKT,UAAU,+BACb,uBAAGU,KAAMF,EAAQG,OAAO,SAASC,IAAI,uBACnC,yBAAKZ,UAAU,4BACb,wBAAIA,UAAU,2BAA2BK,GACzC,uBAAGL,UAAU,WAAWF,EAAE,YAAD,OAAaM,EAAb,kBACxBK,GACC,yBAAKT,UAAU,sCACZS,EAAKN,KAAI,SAAAU,GAAK,OACb,yBACEb,UAAU,kCACVc,MAAM,QAELD,OAKRP,GACC,yBACES,IAAKT,EACLN,UAAU,eACVgB,IAAG,UAAKX,EAAL,qBAgBvBT,EAASqB,aAAe,CACtBrC,KAAM,YAGOgB,Q,4ECnBAsB,MArCf,SAAcrB,GAAQ,IACZQ,EAAuDR,EAAvDQ,MAAOU,EAAgDlB,EAAhDkB,IAAKR,EAA2CV,EAA3CU,YAAaY,EAA8BtB,EAA9BsB,MAAOV,EAAuBZ,EAAvBY,KAAYD,GAAWX,EAAjBuB,KAAiBvB,EAAXW,QADjC,ECEN,SAAyBO,GAAM,IAAD,EACXlC,mBAAS,IADE,mBACpCwC,EADoC,KAC1BC,EAD0B,OAEbzC,oBAAS,GAFI,mBAEpCG,EAFoC,KAE3BC,EAF2B,KA0B3C,GAtBAC,qBAAU,YACW,qBAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAIHE,MAAM,UAAD,OAAW0B,KAJb,OAIfzB,EAJe,8DAMfC,QAAQC,MAAR,6BAAoCuB,EAApC,MACA9B,GAAW,GAPI,kBAQR,CAAED,YARM,YAUbM,EAAIG,GAVS,oCAAAN,EAAA,MAWEG,EAAIiC,QAXN,QAWTC,EAXS,OAYfF,EAAYE,GAZG,QAejBvC,GAAW,GAfM,wDAkBnBU,KACC,CAACoB,EAAK/B,IAELA,EAAS,MAAO,CAAEA,WAEtB,IAAMyC,EAAWC,MACdC,IAAIC,KACJD,IAAIE,IAAc,CACjBC,UAAU,EACVC,OAAQ,CACNC,SAAU,CACRC,KAAM,SAACC,EAAGC,GAKR,OAHcT,MACXC,IAAIS,IAAQ,CAAEC,UAAU,IACxBT,MAAMO,EAAKG,OAAOC,YAK3BC,sBAAuB,KAIxBC,YAAYpB,GAAUqB,SAEzB,MAAO,CAAE1D,UAASyC,YDhDYkB,CAAgB5B,GAAtC/B,EAHW,EAGXA,QAASyC,EAHE,EAGFA,SAEjB,OAAIzC,EAAgB,2CAEfyC,EAGH,kBAACmB,EAAA,EAAD,KACE,4BAAKvC,GACJc,GAAS,kBAAC0B,EAAA,EAAD,CAAO/B,MAAM,WAAb,kBACV,uBAAGd,UAAU,QAAQO,GACpBE,GACC,2BACGA,EAAKN,KAAI,SAAAU,GAAK,OACb,kBAACgC,EAAA,EAAD,CAAO7C,UAAU,OAAOc,MAAM,QAC3BD,OAKRL,GACC,2BACE,uBAAGE,KAAMF,EAAQR,UAAU,iBACzB,uBAAGA,UAAU,uBADf,gBAMJ,6BACCyB,GAzBiB,oDENT,SAASqB,IAAW,IAAD,ECHnB,SAAiBC,EAAMnE,GAAO,IAAD,EACfD,EAASC,GAA5BI,EADkC,EAClCA,QAASF,EADyB,EACzBA,MAEjB,OAAIE,EAAgB,CAAEA,WAEf,CAAEA,UAASoB,KAAMtB,EAAMiE,IDCJC,CAFRC,cAAZC,QAEqC,YAAnClE,EAHwB,EAGxBA,QAASoB,EAHe,EAGfA,KAEjB,OAAIpB,EAAgB,2CAEfoB,EAEE,kBAAC,EAASA,GAFC,+CELL,SAAS+C,IACtB,IAAMC,EAAQC,cAEd,OACE,kBAACT,EAAA,EAAD,CAAWU,OAAK,EAACtD,UAAU,OACzB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuD,KAAI,UAAKH,EAAMG,KAAX,cACT,kBAACT,EAAD,OAEF,kBAAC,IAAD,CAAOS,KAAMH,EAAMG,MACjB,wCACA,kBAAC,EAAD,S,oCCDK,SAASC,IAAQ,IAAD,EACTzD,cAAZD,EADqB,EACrBA,EAAG2D,EADkB,EAClBA,KAEX,OACE,yBAAKzD,UAAU,UACb,yBAAKA,UAAU,yDACb,yBAAK0D,MAAM,8BACT,yBACE1D,UAAU,oBACVgB,IAAI,WACJD,IAAI,qBAGR,yBAAKf,UAAU,gCACb,wBAAIA,UAAU,6BAAd,mBACA,uBAAGA,UAAU,WAAWF,EAAE,UAC1B,wBAAIE,UAAU,yBACd,uBAAGA,UAAU,QACVF,EAAE,cACH,6BACCA,EAAE,aAEL,2BACE,kBAAC,OAAD,CAAM6D,GAAG,UAAUC,KAAK,EAAMC,QAAQ,EAAMC,SAAU,KACpD,kBAAC,IAAD,CAAiBC,KAAMC,IAAYhE,UAAU,SAC5CF,EAAE,mBAGP,6BACqB,OAAlB2D,EAAKQ,SACJ,4BAAQC,QAAS,kBAAMT,EAAKU,eAAe,QAA3C,WAEA,4BAAQD,QAAS,kBAAMT,EAAKU,eAAe,QAA3C,gBAIN,yBAAKnE,UAAU,gDACb,kBAAC,OAAD,CACEA,UAAU,mBACV2D,GAAG,cACHC,KAAK,EACLC,QAAQ,EACRC,SAAU,KAEThE,EAAE,kBACH,kBAAC,IAAD,CAAiBiE,KAAMK,IAAsBpE,UAAU,YAI7D,yBAAKA,UAAU,SAASqE,GAAG,eACzB,yBAAKrE,UAAU,qBACb,wBAAIA,UAAU,QAAQF,EAAE,kBAAxB,KACA,uBAAGE,UAAU,WAAWF,EAAE,0BAE5B,kBAAC,EAAD,OAEF,yBAAKE,UAAU,uBAAuBqE,GAAG,WACvC,yBAAKrE,UAAU,qBACb,wBAAIA,UAAU,QAAQF,EAAE,iBAAxB,KACA,uBAAGE,UAAU,WAAWF,EAAE,yBAE5B,yBAAKE,UAAU,uBACb,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAiB+D,KAAMO,IAAYtE,UAAU,SAC7C,uBAAGU,KAAK,wCAAwCC,OAAO,QAAvD,mCAIF,yBAAKX,UAAU,QACb,kBAAC,IAAD,CAAiB+D,KAAMQ,IAAWvE,UAAU,SAC5C,uBAAGU,KAAK,sCAAR,oBAEF,yBAAKV,UAAU,QACb,kBAAC,IAAD,CAAiB+D,KAAMS,IAAUxE,UAAU,SAC3C,uBAAGU,KAAK,iCAAR,gBAEF,yBAAKV,UAAU,QACb,kBAAC,IAAD,CAAiB+D,KAAMU,IAAYzE,UAAU,SAC7C,uBAAGU,KAAK,+CAAR,gB,OCxEGgE,MAhBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAK1E,UAAU,UACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuD,KAAK,aACV,kBAACJ,EAAD,OAEF,kBAAC,IAAD,CAAOI,KAAK,KACV,kBAACC,EAAD,WCJQmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1B,MACvB,2D,qCCbNK,IAGG9B,IAAIoD,KAGJpD,IAAIqD,KAEJrD,IAAIsD,KAGJC,KAAK,CACJC,YAAa,KACbC,OAAO,EAEPC,cAAe,CACbC,aAAa,KAIJ7B,EAAf,EClBA8B,IAASC,OACP,kBAAC,WAAD,CAAUC,SAAU,+BAClB,kBAAC,EAAD,OAEFC,SAASC,eAAe,SFwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.8ba1244d.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardText,\n  CardBody,\n  CardLink,\n  CardTitle,\n  CardSubtitle,\n  Badge\n} from \"reactstrap\";\n\nfunction PostCard(props) {\n  const { slug, title, description, img, link, github, tech, indev } = props;\n  return (\n    <div>\n      <Card>\n        <CardBody>\n          <CardTitle tag=\"h3\">\n            <Link to={`${slug}`}>{title}</Link>\n          </CardTitle>\n\n          <CardText>\n            {indev && <Badge color=\"warning\">In Development</Badge>}\n          </CardText>\n          <CardSubtitle>{description}</CardSubtitle>\n          {tech && (\n            <CardText>\n              {tech.map(entry => (\n                <Badge className=\"mr-1\" color=\"info\">\n                  {entry}\n                </Badge>\n              ))}\n            </CardText>\n          )}\n        </CardBody>\n        {img && <img src={img} alt={`${title} preview`} />}\n        <CardBody>\n          {link && <CardLink href={link}>Project Link</CardLink>}\n          {github && (\n            <CardLink className=\"link-unstyled\" href={github}>\n              <u>\n                <i className=\"fab fa-github mr-2\" />\n                Github Repo\n              </u>\n            </CardLink>\n          )}\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nPostCard.propTypes = {\n  slug: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  img: PropTypes.string,\n  src: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  github: PropTypes.string,\n  tech: PropTypes.arrayOf(PropTypes.string),\n  indev: PropTypes.bool\n};\n\nexport default PostCard;\n","import { useState, useEffect } from \"react\";\n\nexport default function usePosts(type = \"projects\") {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      let res;\n\n      try {\n        res = await fetch(`/posts/${type}.json`);\n      } catch (error) {\n        setLoading(false);\n        console.error(`Error loading posts for type ${type}`);\n        return { loading };\n      }\n      if (res.ok) {\n        setPosts(await res.json());\n      }\n      setLoading(false);\n    };\n    fetchPosts();\n  }, [type, loading]);\n\n  return { loading, posts };\n}\n","import React from \"react\";\nimport PostCard from \"./PostCard\";\nimport usePosts from \"../../hooks/usePosts\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction PostList(props) {\n  const { type } = props;\n  const { loading, posts } = usePosts(type);\n  const { t } = useTranslation();\n\n  if (loading) return <div>Loading...</div>;\n\n  return (\n    <div className=\"flex flex-wrap justify-center\">\n      {Object.keys(posts).map(post => {\n        const { title, description, img, github, tech } = posts[post];\n        return (\n          <div className=\"w-full lg:w-1/2 px-10 py-10\">\n            <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\n              <div className=\"project-card text-center\">\n                <h3 className=\"font-bold text-4xl py-4\">{title}</h3>\n                <p className=\"text-xl\">{t(`projects.${post}.description`)}</p>\n                {tech && (\n                  <div className=\"flex flex-wrap justify-center pt-3\">\n                    {tech.map(entry => (\n                      <div\n                        className=\"mx-1 px-3 py-1 my-2 bg-blue-100\"\n                        color=\"info\"\n                      >\n                        {entry}\n                      </div>\n                    ))}\n                  </div>\n                )}\n                {img && (\n                  <img\n                    src={img}\n                    className=\"mx-auto pt-3\"\n                    alt={`${title} preview`}\n                  />\n                )}\n              </div>\n            </a>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nPostList.propTypes = {\n  type: PropTypes.string\n};\n\nPostList.defaultProps = {\n  type: \"projects\"\n};\n\nexport default PostList;\n","import React from \"react\";\nimport useMarkdownPost from \"../../hooks/useMarkdownPost\";\nimport { Container, Badge } from \"reactstrap\";\n\nfunction Post(props) {\n  const { title, src, description, indev, tech, link, github } = props;\n\n  const { loading, rendered } = useMarkdownPost(src);\n\n  if (loading) return <div>Loading...</div>;\n\n  if (!rendered) return <div>Error loading post</div>;\n\n  return (\n    <Container>\n      <h1>{title}</h1>\n      {indev && <Badge color=\"warning\">In Development</Badge>}\n      <p className=\"lead\">{description}</p>\n      {tech && (\n        <p>\n          {tech.map(entry => (\n            <Badge className=\"mr-1\" color=\"info\">\n              {entry}\n            </Badge>\n          ))}\n        </p>\n      )}\n      {github && (\n        <u>\n          <a href={github} className=\"link-unstyled\">\n            <i className=\"fab fa-github mr-2\" />\n            Github Repo\n          </a>\n        </u>\n      )}\n      <hr />\n      {rendered}\n    </Container>\n  );\n}\n\nexport default Post;\n","import { useState, useEffect } from \"react\";\nimport unified from \"unified\";\nimport parse from \"remark-parse\";\nimport remark2react from \"remark-react\";\nimport rehype from \"rehype-dom-parse\";\n\nexport default function useMarkdownPost(src) {\n  const [markdown, setMarkdown] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      let res;\n\n      try {\n        res = await fetch(`/posts/${src}`);\n      } catch (error) {\n        console.error(`Error loading post ${src}}`);\n        setLoading(false);\n        return { loading };\n      }\n      if (res.ok) {\n        const md = await res.text();\n        setMarkdown(md);\n      }\n\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, [src, loading]);\n\n  if (loading) return { loading };\n\n  const rendered = unified()\n    .use(parse)\n    .use(remark2react, {\n      sanitize: false,\n      toHast: {\n        handlers: {\n          html: (h, node) => {\n            // process raw HTML text into HAST so react remark can process it\n            const child = unified()\n              .use(rehype, { fragment: true })\n              .parse(node.value).children;\n            return child;\n          }\n        }\n      },\n      remarkReactComponents: {\n        // img: props => <div>{JSON.stringify(props)}</div>\n      }\n    })\n    .processSync(markdown).contents;\n\n  return { loading, rendered };\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport usePost from \"../../hooks/usePost\";\nimport Post from \"../../components/Post\";\n\nexport default function Project() {\n  let { project } = useParams();\n\n  const { loading, post } = usePost(project, \"projects\");\n\n  if (loading) return <div>Loading...</div>;\n\n  if (!post) return <div>Post not found</div>;\n\n  return <Post {...post} />;\n}\n","import usePosts from \"./usePosts\";\n\nexport default function usePost(slug, type) {\n  const { loading, posts } = usePosts(type);\n\n  if (loading) return { loading };\n\n  return { loading, post: posts[slug] };\n}\n","import React from \"react\";\nimport PostList from \"../../components/PostList\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\nimport Project from \"./Project\";\n\nimport { Container } from \"reactstrap\";\n\nexport default function Projects() {\n  const match = useRouteMatch();\n\n  return (\n    <Container fluid className=\"p-4\">\n      <Switch>\n        <Route path={`${match.path}/:project`}>\n          <Project />\n        </Route>\n        <Route path={match.path}>\n          <h1>Projects</h1>\n          <PostList />\n        </Route>\n      </Switch>\n    </Container>\n  );\n}\n","import React, { Suspense } from \"react\";\nimport PostList from \"../../components/PostList\";\nimport { Link } from \"react-scroll\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowAltCircleDown,\n  faComments,\n  faMailBulk,\n  faEnvelope\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  faTwitter,\n  faLinkedin,\n  faGithub\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function Home() {\n  const { t, i18n } = useTranslation();\n\n  return (\n    <div className=\"h-full\">\n      <div className=\"xl:px-64 main flex justify-center items-center h-full\">\n        <div class=\"w-1/3 px-4 hidden md:block\">\n          <img\n            className=\"d-none d-md-block\"\n            alt=\"portrait\"\n            src=\"./assets/me.jpg\"\n          />\n        </div>\n        <div className=\"w-full md:w-2/3 px-4 text-lg\">\n          <h1 className=\"text-6xl font-bold tiktok\">Antoine Gagnon.</h1>\n          <p className=\"text-lg\">{t(\"intro\")}</p>\n          <hr className=\"my-2 border-gray-500\" />\n          <p className=\"pb-5\">\n            {t(\"bio.school\")}\n            <br />\n            {t(\"bio.work\")}\n          </p>\n          <p>\n            <Link to=\"contact\" spy={true} smooth={true} duration={600}>\n              <FontAwesomeIcon icon={faComments} className=\"mr-2\" />\n              {t(\"contact.title\")}\n            </Link>\n          </p>\n          <div>\n            {i18n.language === \"fr\" ? (\n              <button onClick={() => i18n.changeLanguage(\"en\")}>English</button>\n            ) : (\n              <button onClick={() => i18n.changeLanguage(\"fr\")}>Fançais</button>\n            )}\n          </div>\n        </div>\n        <div className=\"text-2xl text-center absolute bottom-0 pb-10\">\n          <Link\n            className=\"effect-underline\"\n            to=\"my-projects\"\n            spy={true}\n            smooth={true}\n            duration={600}\n          >\n            {t(\"projects.title\")}\n            <FontAwesomeIcon icon={faArrowAltCircleDown} className=\"ml-2\" />\n          </Link>\n        </div>\n      </div>\n      <div className=\"w-full\" id=\"my-projects\">\n        <div className=\"text-center py-10\">\n          <h2 className=\"py-2\">{t(\"projects.title\")}.</h2>\n          <p className=\"text-lg\">{t(\"projects.description\")}</p>\n        </div>\n        <PostList />\n      </div>\n      <div className=\"w-full second h-full\" id=\"contact\">\n        <div className=\"text-center py-10\">\n          <h2 className=\"py-2\">{t(\"contact.title\")}.</h2>\n          <p className=\"text-lg\">{t(\"contact.description\")}</p>\n        </div>\n        <div className=\"text-center text-xl\">\n          <div className=\"my-2\">\n            <FontAwesomeIcon icon={faEnvelope} className=\"mr-2\" />\n            <a href=\"mailto:antoine.gagnon5@usherbrooke.ca\" target=\"_top\">\n              antoine.gagnon5@usherbrooke.ca\n            </a>\n          </div>\n          <div className=\"my-2\">\n            <FontAwesomeIcon icon={faTwitter} className=\"mr-2\" />\n            <a href=\"https://twitter.com/antoinegag_dev\">@antoinegag_dev</a>\n          </div>\n          <div className=\"my-2\">\n            <FontAwesomeIcon icon={faGithub} className=\"mr-2\" />\n            <a href=\"https://github.com/antoinegag\">@antoinegag</a>\n          </div>\n          <div className=\"my-2\">\n            <FontAwesomeIcon icon={faLinkedin} className=\"mr-2\" />\n            <a href=\"https://www.linkedin.com/in/antoine-gagnon/\">LinkedIn</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Projects from \"./pages/Projects\";\nimport Home from \"./pages/Home\";\nimport \"./styles/App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"h-full\">\n        <Switch>\n          <Route path=\"/projects\">\n            <Projects />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport Backend from \"i18next-xhr-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\ni18n\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: \"en\",\n    debug: true,\n\n    interpolation: {\n      escapeValue: false // not needed for react as it escapes by default\n    }\n  });\n\nexport default i18n;\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./styles/tailwind.css\";\nimport \"./i18n\";\n\nReactDOM.render(\n  <Suspense fallback={<div />}>\n    <App />\n  </Suspense>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}